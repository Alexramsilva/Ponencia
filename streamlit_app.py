# -*- coding: utf-8 -*-
"""APP PONENCIA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ceGwQgP8sE0kZBRlagPyFXVL3aP6nE8y
"""

import streamlit as st
import yfinance as yf
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

st.image("URC.png", caption="LCFI-URC Universidad Rosario Castellanos", width=200)

# Lista de acciones proporcionadas
acciones = [
    'AC.MX', 'ACCELSAB.MX', 'ACTINVRB.MX', 'AGUA.MX', 'ALFAA.MX', 'ALPEKA.MX',
    'ALSEA.MX', 'AMXB.MX', 'ASURB.MX', 'AUTLANB.MX', 'AXTELCPO.MX', 'BBAJIOO.MX',
    'BEVIDESB.MX', 'BIMBOA.MX', 'BOLSAA.MX', 'CABLECPO.MX', 'CADUA.MX', 'CERAMICB.MX',
    'CHDRAUIB.MX', 'CIDMEGA.MX', 'CIEB.MX', 'CMOCTEZ.MX', 'CMRB.MX', 'COLLADO.MX',
    'CONVERA.MX', 'CREAL.MX', 'CTAXTELA.MX', 'CUERVO.MX', 'CULTIBAB.MX', 'CYDSASAA.MX',
    'DINEB.MX', 'ELEKTRA.MX', 'FEMSAUBD.MX', 'FINAMEXO.MX', 'FINDEP.MX', 'FRAGUAB.MX',
    'GAPB.MX', 'GBMO.MX', 'GCARSOA1.MX', 'GCC.MX', 'GENTERA.MX', 'GFINBURO.MX',
    'GFNORTEO.MX', 'GIGANTE.MX', 'GISSAA.MX', 'GMD.MX', 'GMEXICOB.MX', 'GMXT.MX',
    'GNP.MX', 'GPROFUT.MX', 'GRUMAB.MX', 'HCITY.MX', 'HERDEZ.MX', 'HOMEX.MX',
    'HOTEL.MX', 'ICHB.MX', 'INVEXA.MX', 'JAVER.MX', 'KIMBERA.MX', 'KOFUBL.MX',
    'KUOB.MX', 'LABB.MX', 'LAMOSA.MX', 'LASITEB-1.MX', 'LIVEPOL1.MX', 'MEDICAB.MX',
    'MEGACPO.MX', 'MFRISCOA-1.MX', 'MINSAB.MX', 'NEMAKA.MX', 'OMAB.MX', 'ORBIA.MX',
    'PASAB.MX', 'PE&OLES.MX', 'PINFRAL.MX', 'POCHTECB.MX', 'POSADASA.MX', 'Q.MX',
    'RA.MX', 'RLHA.MX', 'SIMECB.MX', 'SITES1A-1.MX', 'SORIANAB.MX', 'SPORTS.MX',
    'TEAKCPO.MX', 'TMMA.MX', 'TRAXIONA.MX', 'URBI.MX', 'VALUEGF0.MX', 'VASCONI.MX',
    'VESTA.MX', 'VINTE.MX', 'VISTAA.MX', 'VITROA.MX', 'VOLARA.MX', 'WALMEX.MX'
]

# Título de la aplicación
st.title('Predicción de Acciones usando Redes Neuronales')

# Selección de la acción
st.subheader('Selecciona una acción:')
accion = st.selectbox('Acción:', acciones)

# Obtener datos históricos de la acción seleccionada
@st.cache
def cargar_datos(accion):
    df = yf.download(accion, period="5y")
    return df

if accion:
    # Cargar los datos
    datos = cargar_datos(accion)

    # Mostrar los datos
    st.subheader(f'Datos históricos de {accion}')
    st.write(datos.tail())

    # Definir el target y las características (Close y Volume en este caso)
    datos['Return'] = datos['Close'].pct_change()  # Calculamos el rendimiento
    datos = datos.dropna()

    # Preparación de los datos para el modelo
    X = datos[['Close', 'Volume']].values
    y = datos['Return'].values

    # Escalar los datos
    scaler = MinMaxScaler()
    X_scaled = scaler.fit_transform(X)

    # Dividir los datos en entrenamiento y prueba
    X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, shuffle=False)

    # Crear el modelo de red neuronal
    model = Sequential()
    model.add(Dense(64, input_dim=X_train.shape[1], activation='relu'))  # Capa oculta 1
    model.add(Dense(32, activation='relu'))  # Capa oculta 2
    model.add(Dense(1))  # Capa de salida (predicción de rendimiento)

    # Compilar el modelo
    model.compile(optimizer='adam', loss='mse')

    # Entrenar el modelo
    st.subheader('Entrenamiento del Modelo')
    if st.button('Entrenar'):
        history = model.fit(X_train, y_train, epochs=50, batch_size=32, validation_data=(X_test, y_test))
        st.success('Modelo entrenado con éxito')

    # Mostrar resu
# Personalización de diseño
st.markdown("""
<style>
    .stApp {
        background-color:  #da3262;
    }
    .css-1d391kg {
        color:  #faf7f8;
    }
</style>
""", unsafe_allow_html=True)

# Añadir la línea separadora
st.markdown("<hr>", unsafe_allow_html=True)

# Insertar el código HTML con estilos personalizados
st.markdown("""
    <div class="container col-sm-5 creditos text-center">
        <p style="margin-top:0;margin-bottom:0;font-size:15px;color: #424040;text-align:center">
            <strong>Colaboración:</strong>
        </p>
        <p style="margin-top:0;margin-bottom:0;font-size:12px;color:  #979394 ;text-align:center">
            <strong>Asignatura (UCA): Métodos Cuantitativos  LCFI-URC</strong>
        </p>
        <p style="margin-top:0;margin-bottom:0;font-size:12px;color:  #979394 ;text-align:center">
            <strong>Grupo 103 GAM-LCFI-URC</strong>
        </p>
    </div>
""", unsafe_allow_html=True)